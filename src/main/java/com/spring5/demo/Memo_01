--------------------------------------------------------------------------------------------
001. Mono와 Flux는 무엇이 다른가?
--------------------------------------------------------------------------------------------

 Mono는 0-1개의 결과만을 처리하기 위한 Reactor의 객체이고,
 Flux는 0-N개인 여러 개의 결과를 처리하는 객체다.

 * 처리하는 개 무엇을 의미하는가?


답:

flux는 streaming 즉 연결 흐름이라고 이해하면 되는데. 그 전에 sse 개념을 알아야 한다.
*Server Send Event 프로토콜? 통신

전통적인 was는 개발자가 필요에 의해 구현하지 않는 이상 http 기본 프로토콜이다.
즉 클라이언트가 요청하고 서버가 응답한다. 서버가 클라이언트에게 무언가를 주지 않는다.

채팅의 경우 웹소켓을 사용한다.

sse는 클라이언트가 서버에 요청을 하면 서버가 연결을 끊지 않고 연결상태를 유지하는 것을 말하며
이때 flux를 사용한다. mono는 말그대로 0~1개의 요청. 여기서 사용/적용이 결정된다.

Flux 와 Mono 둘다 비동기지만 sse로 연결이 계속 되어 있느냐 아니냐의 차이다.

--------------------------------------------------------------------------------------------
002. Event loop란 무엇인가?
--------------------------------------------------------------------------------------------
 서버가 클라이언트로 부터 요청을 받고 바로 요청을 받았다는 결과를 돌려준다. 요청에 대한 작업이 끝나기 전까지
 이벤트 루프에 기억해 놓고. 작업이 끝나면 기억을 끄집어내서 클라이언트에게 요청에 대한 작업 결과를 전달한다.

--------------------------------------------------------------------------------------------
003. Spring5의 WebFlux의 전신은 reactive 프로그래밍이다. WebFlux 는 Reqctive 의 구현체다.
--------------------------------------------------------------------------------------------